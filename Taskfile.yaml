# https://taskfile.dev

version: '3'

dotenv: [".env"]

# vars:
#   BOARD: p3509-a02+p3767-0000
#   RUNTIME: ${RUNTIME}
#   VERSION: R35.2.1

tasks:
  default:
    cmds:
      - task -l
    silent: true

  clean:
    desc: "clean"
    cmds:
      - |
        sudo rm -fR ~/nvidia #~/.nvsdkm

  login:
    desc: "login and show available commands from sdkmanager"
    cmds:
      - sdkmanager --query --staylogin true

  download:
    desc: "download files"
    cmds:
      - |
        cd ${HOME}/Downloads/nvidia/sdkm_downloads/
        [ -f orin_nx_JP5_1_bsp.tar.xz ] || wget https://github.com/mistelektronik/dsboard_ornx_orin_nx_bsp/raw/master/orin_nx_JP5_1_bsp.tar.xz
        [ -d orin_nx_JP5_1_bsp ] || tar xvf orin_nx_JP5_1_bsp.tar.xz

        sdkmanager --cli downloadonly \
        --logintype devzone \
        --license accept \
        --staylogin true \
        --exitonfinish \
        --datacollection disable \
        --product Jetson \
        --version ${JETPACK_VERSION} \
        --targetos Linux \
        --target ${TARGET} \
        --select 'Jetson Linux' \
        --deselect 'Jetson SDK Components' \
        --deselect 'Developer Tools' \
        --deselect 'Developer Tools for Deep Learning' \
        --deselect 'Jetson Runtime Components' \
      #- docker compose run --rm sdkmanager --cli downloadonly --responsefile /sdkm_responsefile_jetson.ini

  build:
    desc: "build orin image"
    cmds:
      - task: clean
      - task: install
      - task: bsp
      - task: customize
      - task: os:build


  install:
    desc: "install linux 4 tegra environment"
    cmds:
      - |
        sdkmanager --cli install \
        --logintype devzone \
        --license accept \
        --staylogin true \
        --exitonfinish \
        --datacollection disable \
        --product Jetson \
        --version ${JETPACK_VERSION} \
        --targetos Linux \
        --target ${TARGET} \
        --select 'Jetson Linux' \
        --deselect 'Jetson SDK Components' \
        --deselect 'Developer Tools' \
        --deselect 'Developer Tools for Deep Learning' \
        --deselect 'Jetson Runtime Components' \
        --offline \
        --flash skip
        #- docker compose run sdkmanager --cli install --responsefile /sdkm_responsefile_jetson.ini
        #ln -sf $HOME/nvidia/nvidia_sdk/JetPack_${JETPACK_VERSION}_Linux_${TARGET}/Linux_for_Tegra/ /home/nvidia/tegra
        #--downloadfolder $HOME/Downloads/nvidia/sdkm_downloads/ \

        # sdkmanager --cli install --logintype devzone --product Jetson --version 5.1 --targetos Linux --host --target JETSON_AGX_ORIN_TARGETS --flash all --additionalsdk 'DeepStream 6.2'


  bsp:
    desc: "custom BSP DSBOARD-ORNX as https://www.forecr.io/blogs/installation/jetpack-5-1-installation-for-dsboard-ornx"
    cmds:
      - |
        cd ${RUNTIME}
        BSP=${DOWNLOAD}/orin_nx_JP5_1_bsp
 
        cp -a $BSP/jetson-orin-nx-devkit-16gb.conf $BSP/p3768-0000+p3767-0000.conf .
        cp $BSP/Image kernel/
        cp $BSP/tegra234-p3767-0000-p3768-0000-a0* kernel/dtb/
        cp $BSP/tegra234-mb1-bct-gpio-p3767-dp-a03.dtsi bootloader/
        cp $BSP/tegra234-bpmp-3767-0000-a02-3768-0000-a00.dtb bootloader/t186ref/
        cp $BSP/tegra234-mb1-bct-p* bootloader/t186ref/BCT/

        sudo ./tools/l4t_flash_prerequisites.sh
        sudo ./apply_binaries.sh

        sudo cp ${BSP}/nvgpu.ko rootfs/usr/lib/modules/5.*/kernel/drivers/gpu/nvgpu/
 
        sed -i "s/cvb_eeprom_read_size = <0x100>;/cvb_eeprom_read_size = <0x0>;/g" bootloader/t186ref/BCT/tegra234-mb2-bct-misc-p3767-0000.dts
        sed -i "s/ODMDATA=\"gbe-uphy-config-8,hsstp-lane-map-3,hsio-uphy-config-0\";/ODMDATA=\"gbe-uphy-config-9,hsstp-lane-map-3,hsio-uphy-config-0\";/g" p3767.conf.common

  customize:
    desc: customize rootfs
    cmds:
      - |
        cd ${RUNTIME}
        sudo ./tools/l4t_create_default_user.sh -u ubuntu -p ubuntu -a -n orin --accept-license

  os:build:
    desc: build os
    cmds:
      - |
        cd ${RUNTIME}
        sudo ./tools/kernel_flash/l4t_initrd_flash.sh --no-flash --external-device nvme0n1p1 -c tools/kernel_flash/flash_l4t_external.xml -p "-c bootloader/t186ref/cfg/flash_t234_qspi.xml" --showlogs --network usb0 ${CONFIG} internal

  os:flash:
    desc: flash
    cmds:
      - |
        cd ${RUNTIME}
        sudo ./tools/kernel_flash/l4t_initrd_flash.sh --flash-only --external-device nvme0n1p1 -c tools/kernel_flash/flash_l4t_external.xml -p "-c bootloader/t186ref/cfg/flash_t234_qspi.xml" --showlogs --network usb0 ${CONFIG} internal        

